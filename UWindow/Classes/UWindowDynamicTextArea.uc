//*******************************************************************************
//* UWindowDynamicTextArea generated by Eliot.UELib using UE Explorer.
//* Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
//* http://eliotvu.com
//* 
//* All rights belong to their respective owners.
//* ******************************************************************************
class UWindowDynamicTextArea extends UWindowDialogControl
    config;

var config int MaxLines;
var bool bTopCentric;
var float DefaultTextHeight;
var bool bScrollOnResize;
var bool bVCenter;
var bool bHCenter;
var bool bAutoScrollbar;
var bool bVariableRowHeight;
var float WrapWidth;
var UWindowDynamicTextRow List;
var UWindowVScrollbar VertSB;
var float OldW;
var float OldH;
var bool bDirty;
var int Count;
var int VisibleRows;
var int Font;
var Font AbsoluteFont;
var Color TextColor;
var class<UWindowDynamicTextRow> RowClass;

function Created();

function Clear();

function SetAbsoluteFont(Font f);

function SetFont(int f);

function SetTextColor(Color C);

function TextAreaClipText(Canvas C, float DrawX, float DrawY, coerce string S, optional bool bCheckHotKey);

function TextAreaTextSize(Canvas C, string Text, out float W, out float H);

function BeforePaint(Canvas C, float X, float Y);

function Paint(Canvas C, float MouseX, float MouseY);

function UWindowDynamicTextRow AddText(string NewLine);

function UWindowDynamicTextRow CheckMaxRows();

function WordWrap(Canvas C, bool bForce);

function WrapRow(Canvas C, UWindowDynamicTextRow L);

function float DrawTextLine(Canvas C, UWindowDynamicTextRow L, float Y);

function int GetWrapPos(Canvas C, UWindowDynamicTextRow L, float MaxWidth);

function UWindowDynamicTextRow SplitRowAt(UWindowDynamicTextRow L, int SplitPos);

function RemoveNextWord(out string Text, out string NextWord);

function RemoveWrap(UWindowDynamicTextRow L);

defaultproperties
{
    bScrollOnResize=true
    TextColor=(B=255,G=255,R=255,A=255)
    RowClass=Class'UWindowDynamicTextRow'
    bNoKeyboard=true
}