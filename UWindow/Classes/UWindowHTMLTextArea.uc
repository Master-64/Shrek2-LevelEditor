//*******************************************************************************
//* UWindowHTMLTextArea generated by Eliot.UELib using UE Explorer.
//* Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
//* http://eliotvu.com
//* 
//* All rights belong to their respective owners.
//* ******************************************************************************
class UWindowHTMLTextArea extends UWindowDynamicTextArea
    config;

var Color TextColor;
var Color BGColor;
var Color LinkColor;
var Color ALinkColor;
var float LastBlinkTime;
var bool bShowBlink;
var bool bReleased;

function SetHTML(string HTML);

function BeforePaint(Canvas C, float X, float Y);

function Paint(Canvas C, float X, float Y);

function Click(float X, float Y);

function ProcessURL(string URL);

function OverURL(string URL);

function LaunchUnrealURL(string URL);

function TextAreaTextSize(Canvas C, string Text, out float W, out float H);

function TextAreaClipText(Canvas C, float DrawX, float DrawY, coerce string Text, optional bool bCheckHotKey);

function WrapRow(Canvas C, UWindowDynamicTextRow L);

function float DrawTextLine(Canvas C, UWindowDynamicTextRow L, float Y);

function UWindowDynamicTextRow SplitRowAt(UWindowDynamicTextRow L, int SplitPos);

function RemoveWrap(UWindowDynamicTextRow L);

function int GetWrapPos(Canvas C, UWindowDynamicTextRow L, float MaxWidth);

function RemoveNextWord(out string Text, out string NextWord);

function UWindowDynamicTextRow AddText(string NewLine);

function ParseHTML(string Input, out string LeftText, out string HTML, out string RightText);

function float CalcHTMLTextWidth(Canvas C, string Text, out HTMLStyle CurrentStyle);

function ProcessInlineHTML(string HTML, out HTMLStyle CurrentStyle);

function HTMLUpdateStyle(string Input, out HTMLStyle CurrentStyle);

function string GetOption(string HTML, string Option);

function string GetTag(string HTML);

function Color ParseColor(string S);

function int GetHexDigit(string D);

function int FirstMatching(int i, int j);

function SetCanvasStyle(Canvas C, HTMLStyle CurrentStyle);

function string WriteStyleText(HTMLStyle CurrentStyle, int CharCount);

function int ReadStyleText(string StyleString, out int StylePos, out HTMLStyle CurrentStyle);

defaultproperties
{
    TextColor=(B=255,G=255,R=255,A=255)
    BGColor=(B=0,G=0,R=0,A=255)
    LinkColor=(B=255,G=0,R=0,A=255)
    ALinkColor=(B=0,G=0,R=255,A=255)
    bTopCentric=true
    bAutoScrollbar=true
    bVariableRowHeight=true
    RowClass=Class'UWindowHTMLTextRow'
    bIgnoreLDoubleClick=true
}